[{"title":"大数据概论","url":"/大数据概论/","content":"\n  ......\n\n<!--more-->\n\n1. 数据和信息：信息是较为宏观的概念，它由数据的有序排列组合而成，传达给读者某个概念方法等；而数据则是构成信息的基本单位，离散的数据没有任何使用价值\n2. 数据类型：文本、图片、音频、视频\n3. 数据组织形式：文件（word文档、图片文件）数据库\n4. 大数据的概念：数据量大、数据类型繁多、处理速度快、价值密度低\n5. 大数据处理流程：数据采集与预处理 -> 数据存储与管理 -> 数据处理与分析 -> 数据可视化\n6. 云计算特点：初期零成本，后期免维护，在供应IT资源量方面”予取予求“\n\n### 简答题\n\n1. 云计算服务模式：软件及服务（SaaS）、平台即服务（PaaS）、基础设施及服务（IaaS）\n\n   云类型：<u>公有云、私有云、混合云</u>\n\n   物联网四个层次\n\n   > <u>感知层进行信号采集</u>\n   >\n   > <u>通过网络层进行传输</u>\n   >\n   > <u>传输到指定位置后经过处理层处理</u>\n   >\n   > <u>最后达到应用层</u>\n\n   RFID原理：RFID 技术的基本工作原理并不复杂，电子标签进入磁场后，接收解读器发出的射频信号，凭借感应电流所获得的能量发送出存储在芯片中的产品信息，或者主动发送某频率的信号。解读器读取信息并解码后，送至中央信息系统进行有关数据处理\n\n   硬件：<u>输入设备、输出设备、运算器、控制器、存储器</u>\n\n   CPU处理指令：CPU 从缓存中取出指令放入指令寄存器，并对指令译码。把指令分解成一系列的微操作，然后发出各种控制命令执行微操作系列，从而完成条指令的执行\n\n2. 计算机网络三个功能\n\n   > <u>硬件资源共享</u>：硬件资源共享。可以在全网范围内提供对处理资源、存储资源、输入输出资源等昂贵设备的共享，使用户节省投资也便于集中管理和均衡分担负荷\n   >\n   > <u>软件资源共享</u>：软件资源共享。允许互联网上的用户远程访问各类大型数据库，可以得到网络文件传送服务、远地进程管理服务和远程文件访问服务，从而避免软件研制上的重复劳动及数据资源的重复存贮，也便于集中管理。\n   >\n   > <u>用户间信息交换</u>：用户间信息交换。计算机网络为分布在各地的用户提供了强有力的通信手段。用户可以通过计算机网络传送电子邮件、发布新闻消息和进行电子商务活动。\n\n   常见的网络互联设备：<u>中继器、网桥、路由器、网关、集线器、交换机</u>\n\n   OSI参考模型对应TCP/IP五层模型\n\n|     OSI参考模型      |    TCP/IP五层模型    |\n| :------------------: | :------------------: |\n|        应用层        |        应用层        |\n|        表示层        |        应用层        |\n|        会话层        |        应用层        |\n|        传输层        |        传输层        |\n|     网络层网络层     |     网络层网络层     |\n| 数据链路层数据链路层 | 数据链路层数据链路层 |\n|     物理层物理层     |     物理层物理层     |\n\n3. 数据采集的三大要点：全面性、多维性、高效性\n\n![](大数据概论/2.jpg)\n\n| 1、调度器   | 5、下载器       |\n| :---------- | :-------------- |\n| 2、引擎     | 6、互联网       |\n| 3、项目管道 | 7、爬虫中间件   |\n| 4、爬虫     | 8、下载器中间件 |\n\n\n\n4. Scrapy工作流也叫作“运行流程’呈”或叫作“数据处理流程’整个数据处理流程由Scrapy引擎进行控制，其主要的运行步骤如下:\n\n    ①Scrapy引擎从调度器中取出一个链接（URL）用于接下来的抓取;\n\n    ②Scrapy引擎把URL封装成一个请求并传给下载器;\n\n    ③下载器把资源下载下来，并封装成应答包;\n\n    ④爬虫解析应答包;\n\n    ⑤如果解析出的是项目，则交给项目管道进行进一步的处理;\n\n    ⑥如果解析出的是链接( URL )则把URL交给调度器等待抓取。\n\n5. 数据转换策略：平滑处理、聚集处理、数据泛化处理、规范化处理、属性构造处理\n\n6. 基于内存的分布式计算框架Spark\n\n    在实际应用中，大数据处理主要包括以下三个类型：\n\n    复杂的批量数据处理：通常时间跨度在数十分钟到数小时之间\n\n    基于历史数据的交互式查询：通常时间跨度在数十秒到数分钟之间\n\n    基于实时数据流的数据处理：通常时间跨度在数百毫秒到数秒之间\n    \n7. ![](大数据概论/3.jpg)\n\n------\n\n\n\n### 计算题\n\n\n\n![](大数据概论/4.jpg)\n\n![](大数据概论/5.jpg)\n\n![](大数据概论/6.jpg)\n\n### 论述题\n\n电影推荐系统如何实现？\n\n1. 搭建环境，提供用户管理和电影推荐功能\n2. 数据采集，收集用户对电影的评分\n3. 加载数据，将电影的评分信息加载到数据库中\n4. 数据存储和管理，将电影的评分信息保存到数据库中，并分类处理\n5. 数据分析和处理，电影推荐程序会读取数据库中的用户的评分数据，计算得到推荐结果\n6. 可视化，由网页程序从数据库中读取推荐结果呈现到网页中\n\n\n\n\n\n","tags":["知识","大数据概论"],"categories":["学习"]},{"title":"数据库原理及应用教程基础","url":"/数据库原理及应用教程基础/","content":"\n\n\n数据库，简单地说就是数据的仓库，即数据存放的地方\n\n<!--more-->\n\n## **数据库系统概述**\n\n1. 信息\n\n   信息的特征：\n\n   > 信息源于物质\n   > 信息是可以感知的\n   > 信息是可储存、加工、传递、和再生的\n\n2. 数据\n\n   数据的表现形式：数字、文字、图形、图象、声音和视频\n\n   <u>信息与数据之间的联系：数据是信息的符号表示，信息是对数据的语义解释</u>\n\n3. <u>数据库：存储在计算机中的数据集合</u>\n\n4. 数据管理经过了三个发展阶段：<u>**人工管理、文件系统和数据库系统**</u>\n\n   人工管理阶段数据没有专门的存取设备，没有专门的管理软件、数据不共享、数据不具有独立性\n\n   > 数据独立性指数据库中数据与应用程序间相互独立，逻辑结构、存储结构及存取方式改变不影响应用程序\n   >\n   > 独立性有<u>**物理独立性和逻辑独立性**</u>\n   >\n   > > 物理独立性指物理结构（<u>存储结构</u>、外部存储设备）发生变化，通过修改映射，用户逻辑结构和应用程序不改变\n   > > 逻辑独立性指<u>逻辑结构</u>（修改数据定义、增加数据类型）发生变化，通过修改映射，用户逻辑结构和应用程序不改变\n\n   文件系统阶段数据以文件形式长期保存，有程序与数据之间有独立性，数据有一定共享性\n\n   数据库系统阶段数据结构化，数据共享型高，独立性高，有统一的数据管理和控制功能\n\n   > 数据控制功能：数据的安全性控制、完整性控制、并发控制、数据恢复\n\n5. 数据库系统\n\n   <u>**数据库系统包括数据库和数据库管理系统**</u>\n\n   数据库系统的组成：<u>**数据库、用户、软件系统、硬件系统**</u>\n\n   > 第一类用户：最终用户->非计算机专业人员\n   >\n   > 第二类用户：应用程序员->调试和安装\n   >\n   > 第三类用户：数据库管理员->设计、管理、维护数据库，协调用户\n\n6. 三级模式：<u>**外模式、模式、内模式**</u>（<u>用户模式、概念模式、物理模式</u>）\n\n   > 模式（概念模式）：是数据库中<u>全体</u>数据的<u>逻辑结构</u>和特征的描述\n   >\n   > 外模式（子模式/用户模式）：是数据库<u>用户</u>能看到看到并允许使用的数据的逻<u>辑结构</u>和特征的描述\n   >\n   > 内模式（存储模式/物理模式）：是对数据库<u>存储结构</u>的描述\n   >\n   > > 外模式可以有多个，模式和内模式只能各有一个\n\n   <u>外模式/模式</u>映像，描述数据的全局<u>逻辑</u>结构\n\n   <u>模式/内模式</u>映像，描述数据的全局<u>物理</u>结构\n\n   > 二级映像的优点：保证数据的独立性、简化了用户接口、有利于数据共享、有利于数据的安全保密\n\n7. 数据库管理系统（DBMS）\n\n   <u>**数据库管理系统（DBMS）是数据库系统的核心**</u>组成部分，包括定义、查询、更新（插入、删除和修改）及各种控制\n\n   <u>用户在数据库系统中的一切操作都是通过数据库管理系统进行的</u>\n\n   DBMS主要功能：<u>**数据定义功能、数据操操纵功能、数据库运行管理功能、数据库的建立和维护功能、数据通信接口及数据组织、存储和管理功能**</u>\n\n   > 数据库运行管理是DBMS运行的核心部分\n\n8. 数据模型的组成要素\n\n   **<u>数据结构、数据操作、数据的完整性约束</u>**\n\n   > 数据结构：<u>层次结构、网状结构、关系结构</u>\n   >\n   > 数据操作有查询和更新（插入、删除和修改）\n   >\n   > 完整性约束保证数据正确、有效、相容\n\n9. 四种数据模型\n\n   <u>**层次模型、网状模型、关系模型、面向对象模型**</u>\n\n   > 层次模型采用<u>**树形结构**</u>表示各类实体以及实体间的联系\n   >\n   > 网状模型采用<u>**有向图结构**</u>表示记录型与记录型之间联系的数据模型\n   >\n   > 关系模式的数据结构是<u>**一张规范化的二维表**</u>\n   >\n   > 面向对象模型中最基本的概念是<u>**对象**</u>和<u>**类**</u>\n\n------\n\n\n\n## **关系数据库**\n\n1. 候选码：能标识关系中元组的一个属性或属性集，如：学号、身份证号或二者相加\n2. 主码：如果一个关系中有多个候选码，选择其中一个作为主码\n\n3. 关系代数运算\n\n   基本代数运算：并、差、笛卡儿积、选取、投影\n\n   传统的代数运算：并、差、交、笛卡尔积\n\n   专门的代数运算：选取、投影、连接、~~除~~\n\n\n\n\n\n\n\n------\n\n\n\n## **关系数据库标准语言——SQL**\n\n1. SQL是结构化查询语言（Structured Query Language）的缩写\n   \n2. SQL语句\n\n   数据定义：<u>CREATE（创建）、ALTER（修改）、DROP（删除</u>）\n\n   数据操纵：<u>INSERT INTO（插入表中记录）、UPDATE（修改表中记录）、DELETE（删除表中记录）</u>\n\n   数据查询：<u>SELECT（查询）</u>\n\n3. 聚合函数：AVG（平均值）、SUM（总和）、MAX（最大值）、MIN（最小值）、COUNT（统计个数）\n\n4. WHERE和HAVING\n\n   WHERE：筛选出表中满足条件的行，不可与聚合函数连用\n\n   HAVING：筛选出满足条件的组，可与聚合函数连用，通常与GROUP BY连用\n\n   ![SQL语句执行顺序](数据库原理及应用教程基础/1.png)\n\n5. 数据表中数据的操纵\n\n   * 添加表中数据，INSERT INTO\n\n       ~~~sql\n       /*在 S 表中添加一条学生记录*/\n       INSERT INTO S (sno, sn, age, sex, dept)\n       VALUES ('s1', '张三', 20, '男', '计算机')\n       ~~~\n       \n       \n       ~~~sql\n       /*添加多行记录\n       INSERT INTO 表名\n       子查询*/\n       INSERT INTO S\n       SELECT dept, AVG(sal)\n       FROM T\n       GROUP BY dept\n       ~~~\n       \n   * 修改表中数据，UPDATE\n\n       ~~~sql\n       UPDATE T\n       SET dept='会计'\n       WHERE TN='刘伟'\n       ~~~\n       \n   * 删除数据，DELETE\n\n       ```sql\n       DELETE\n       FROM S\n       WHERE sn='张三'\n       ```\n\n6. 视图\n\n   视图的概念：视图是一个虚拟表，其内容由查询定义，视图包含带有行和列的数据，但是视图并不存储数据。\n\n   视图的作用：<u>通常用来简化用户操作，使用户以多种角度看待同一数据，对重构数据库提供了一定程度的逻辑独立性，更清晰的表达查询</u>\n\n   <u>视图可以用作安全机制，允许用户通过视图访问数据，而不授予访问数据表的权限，**视图本身并不包含数据，保存的是查询语句**</u>\n\n7. 创建视图\n\n   ```sql\n   CREATE VIEW 视图名(属性1,属性2,属性3...)\n   AS SELECT 属性1,属性2,属性3...\n   FROM 表名1,表名2...\n   WHERE ...\n   ```\n\n8. 索引\n\n   两种基本类型的索引：<u>**聚集索引、非聚集索引**</u>\n\n------\n\n\n\n## **数据库安全保护**\n\n1. 数据库安全性的含义\n\n   数据库的安全性是指<u>**保护数据库以防止非法使用所造成的数据泄露、更改或破坏（防止非法操作）**</u>\n\n2. <u>SQL Server身份认证，认证的是和服务器的连接</u>\n\n3. 数据库完整性的含义\n\n   数据库的完整性是指<u>**保护数据库中数据的正确性、有效性和相容性，防止错误的数据进入数据库造成无效操作（保护数据的一致性）**</u>\n\n   > 实时数据库完整性的方法有：<u>约束、默认值、规则、存储过程和触发器</u>\n\n4. 事务\n\n   <u>**事务是数据库中执行的一个工作单位，由用户定义的一组操作**</u>。可以是一组SQL语句、一条SQL语句或整个程序\n\n   定义事务的语句有三条\n\n   ```sql\n   BEGIN TRANSACTION\n   COMMIT\n   ROLLBACK\n   其中BEGIN TRANSACTION表示事务的开始；\n   COMMIT表示事务的提交，正常结束；\n   ROLLBACK表示事务的回滚，即运行过程中发生了某种故障，回滚到开始状态\n   ```\n\n   事务有四个特征：<u>**原子性、一致性、隔离性、持久性（ACID准测）**</u>\n\n5. 并发操作与数据的不一致性\n\n   数据库的并发操作导致的数据库不一致性主要有三种：<u>**丢失更新、污读（读脏数据）、不可重读**</u>\n\n6. 封锁\n\n   封锁类型：<u>**排他型封锁（X锁）、共享封锁（S锁）**</u>\n\n   > 排他型封锁：<u>禁止并发操作</u>（事务T对某个数据对象R实现X封锁后，其他事务要等T解除X封锁以后，才能对R进行封锁，这就保证了其他事物在T释放R上的封锁之前，不能再对R进行操作）\n   >\n   > 共享封锁：<u>允许其他用户对同一数据对象进行查询，但不能对该数据对象进行修改</u>\n\n   封锁协议：\n\n   > 一级封锁协议（不能防止“污读”和“不可重读”）\n   >\n   > 二级封锁协议（能防止“污读”，不能防止“不可重读”）\n   >\n   > 三级封锁协议（既能防止“污读”，也能防止“不可重读”）\n\n   封锁粒度：封锁的数据对象大小称为封锁粒度，封锁粒度越小能够被封锁的对象就越多，并发度越高，烦封锁机构越复杂，系统开销也越大，反之亦然，选择封锁粒度时应考虑封锁机构和并发度两个因素，以求得最优解。\n\n7. 活锁和死锁\n\n   死锁产生的条件：\n\n   > 互斥条件：一个对象只能被一个事务使用，即对数据的封锁采用排他式\n   >\n   > 不可抢占条件：一个数据对象只能被占有它的事务所释放，而不能被别的事务强行抢占\n   >\n   > 部分分配条件：一个事务已经封锁分给它的数据对象，但仍然要求封锁其他数据\n   >\n   > 循环等待条件：允许等待其他事务释放数据对象，系统处于加锁请求互相等待的状态\n\n   死锁的预防：一次加锁法、顺序加锁法\n\n   死锁的诊断与解除：<u>选择一个处理死锁代价最小的事务，将它撤销，解除它的死锁，释放此事务占用的所有数据资源，分配给其他事务</u>\n\n8. 数据库的故障和恢复的策略\n\n   事务故障及其恢复、系统故障及其恢复、介质故障及其恢复\n\n------\n\n\n\n## **数据库设计**\n\n1. 数据库设计步骤：<u>系统需求分析、概念结构设计、逻辑结构设计、物理结构设计、数据库实施、数据库运行和维护</u>\n\n------\n\n\n\n## **SQL Server高级应用**\n\n1. Transact-SQL\n\n   <u>全局变量：全局变量是SQL Server系统内部使用的变量，使用全局变量必须以“@@”开头</u>\n\n   局部变量：局部变量使用户可以自定义的变量，且局部变量名前必须以@为前缀\n\n   局部变量必须先用DECLARE命令声明后才可以使用\n\n   ```sql\n   /*声明一个长度为8个字符的局部变量id*/\n   DECLARE @id char(8)\n   SELECT @id='12345678'\n   ```\n\n   ```sql\n   DECLARE @sno varchar(10),@sn varchar(10)\n   SELECT @sno=SNo,@sn=SN\n   FROM S\n   WHERE SNo='S7'\n   ```\n\n   \n\n2. 触发器是一种特殊的存储过程，但触发器能够自动执行并且不含有参数\n\n3. 触发器的种类：\n\n   > <u>DML触发器</u>：DML触发器是在执行<u>数据操作语言（DML）</u>事件时被激活而自动执行的触发器\n   >\n   > 根据触发器代码执行的时机，DML触发器可以分为两种：<u>**After触发器和Instead of触发器**</u>\n   >\n   > > After触发器是在执行了INSTERT、UPDATE或DELETE语句操作之后激活执行的触发器，也是就在<u>记录已经变完之后（After）</u>才会激活执行，这种触发器只能在表上定义，不能在视图上\n   > >\n   > > Instead of触发器是在执行INSTERT、UPDATE或DELETE语句操作之前激活执行的触发器，也就是<u>记录变更之前</u>，不去执行SQL语句里插入、修改或删除操作，而去执行触发器种的代码所定义的操作，可以定义在表和视图上\n   >\n   > <u>DDL触发器</u>：DDL触发器是在响应各种<u>数据定义语言（DDL）</u>事件时而激活执行的存储过程\n   >\n   > <u>登陆触发器</u>：由登陆（LOGON）事件而激活的触发器，建立用户会话时将引发此事件 \n\n4. 每个触发器都有两个特殊表：<u>**插入表（Inserted）和删除表（Deleted）**</u>，这两个表都是系统在线生成的、动态驻留在内存种的临时表，是由系统管理的逻辑表\n\n5. 备份和还原\n\n   备份类型：<u>**数据库完整备份、差异备份、事务日志备份、文件及文件组备份**</u>\n\n   还原模式：简单还原、完全还原、批日志还原\n\n[各章习题文件](数据库原理及应用教程基础/各章习题.docx)\n\n[各章习题参考答案](数据库原理及应用教程基础/习题参考答案.doc)\n\n[简答题及答案](数据库原理及应用教程基础/简答题.zip)\n\n","tags":["知识","数据库"],"categories":["学习"]},{"title":"Linux基础命令","url":"/Linux基础命令/","content":"最基础命令，入门级水平\n命令之间相关性差，慎观，慎观。\n\n<!--more-->\n\n### 第一章\n\n1. pwd #显示当前用户所处目录\n2. cd #在不同的目录中切换\n3. ls #列出该目录下的文件及目录\n\n   > -a #包括隐藏文件；-t #依照最后修改时间的顺序列出文件\n   >\n   > -l #列出目录下文件好目录的详细信息\n   >\n4. cat #查看文件内容\n\n   > cat 文件1 文件2 > 文件3 #12合并覆盖3\n   >\n   > cat 文件1 文件2 >> 文件3 #12合并附加3\n   >\n5. more #分屏显示，空格向下移动，q建退出\n6. less #回车向下一行，空格向下一页，b向上一页\n7. head #默认只显示前十行\n\n   > -n #显示前几行\n   >\n8. tail #显示末尾几行\n9. mkdir #创建目录\n\n   > rmdir #删除空目录\n   >\n10. touch #创建文件\n11. cp #复制文件\n\n    > -R #递归复制\n    >\n12. mv #文件或目录的移动和重命名\n13. rm #删除\n\n    > -f #不提示\n    >\n    > -r递归删除\n    >\n14. diff #比较文件内容的不同\n15. ln #硬链接（两个文件指向同一个存储空间）\n\n    > -s #软连接（win中的快捷方式）\n    >\n16. gzip #压缩\n17. gunzip #解压缩\n18. tar #打包\n\n    > tar -cvf 1.tar 2.txt 3.txt\n    >\n    > tar -xvf 1.tar\n    >\n    > tar -czvf 打包并压缩\n    >\n19. whereis #可执行文件所在地址\n20. grep #查找文件中指定的字符串\n21. ps #查看系统进程\n22. kill #杀死进程\n23. top #实时监控进程状况\n24. bg #放入后台\n25. jobs #查看后台进程\n26. fg #调到前台\n27. who #查看当前主机用户终端信息\n\n### 第三章\n\n1. echo #输出字符\n\n   > $hello #定义变量hello\n   >\n2. ls -l /tmp > dir #重定向\n\n   > < 输入重定向\n   >\n3. | #管道，结合命令\n\n   > cat /etc/passwd | grep root\n   >\n4. sh #执行.sh文件\n\n   > 可执行文件(x)可以用 ./执行文件 来执行\n   >\n5. vim #vim编辑器\n\n   > a #插入；esc #命令模式；wq #保存并退出\n   >\n6. chmod #文件权限修改\n\n   > -r #可读；4\n   >\n   > -w #可写；2\n   >\n   > -x #可执行；1\n   >\n   > 原始权限：rwxrwxrwx 转换数字：(421)(421)(421) 数字表示法： 777\n   >\n7. chown #修改文件所属用户\n\n   > chown 用户 : 属组 文件\n   >\n\n### 第四章\n\n1. /etc/passwd 文件 #用户账户及其相关信息（密码除外），所有人可读\n\n   > 用户名：加密口令：UID：GID：用户的描述信息：主目录：命令解释器\n   >\n2. /etc/shadow 文件 #存放用户密码，仅root可读\n\n   > 用户名：加密后的用户口令\n   >\n3. /etc/group 文件 #用户的组账户信息，所有人可读\n\n   > 组群名称：组群口令（一般为空，用 x 占位）：GID：组群成员列表\n   >\n4. /etc/gshadow 文件 #存放组群的加密口令、组管理员等信息，仅root可读\n\n   > 组群名称：加密后的组群口令（没有就！）：组群管理员：成员列表\n   >\n5. useradd #新建用户\n\n   > -c #用户的注释信息\n   >\n   > -u #指定用户UID\n   >\n   > -d #指定用户主目录\n   >\n   > -g #用户所属主组群名称或GID\n   >\n   > -p psaawd #加密口令\n   >\n6. passwd #设置口令\n\n   > -l 锁定停用账户\n   >\n   > -u 口令解除\n   >\n   > -d 口令为空\n   >\n7. usermod #修改用户的属性\n\n   > -g #变更所属用户组\n   >\n   > -G #变更扩展用户组；usermod -G root user1\n   >\n   > -L / -U #锁定用户 / 解锁用户\n   >\n   > -u #修改UID；usermod -u 8888 user1\n   >\n8. userdel #删除用户\n\n   > -r #除/etc/passwd、/etc/shadow、/etc/group、/etc/gshadow中的信息外顺便删除主目录下的所有信息\n   >\n9. groupadd #创建组群\n10. groupmod #修改组群\n\n    > -g #修改组群GID\n    >\n    > -n #修改组名\n    >\n11. gpasswd #为组群添加用户\n\n    > -a #把用户加入组；gpasswd -a user1 group1\n    >\n    > -r #取消组密码\n    >\n    > -d #把用户从组中删除\n    >\n    > -A #指派管理员\n    >\n12. su #切换用户\n13. sudo #给用户提供额外权限\n14. whoami #我是谁\n\n### 第五章\n\n1. fdisk #磁盘分区工具\n\n   > fdisk 分区目录 #fdisk /dev/sda 在/dev/sda上分区\n   >\n   > ：p #查看分区表\n   >\n   > ：n #新建分区\n   >\n   > ：d #删除分区表\n   >\n   > ：q #不保存退出\n   >\n   > ：w #保存修改\n   >\n2. mount #挂载\n\n   > mount 设备 挂载目录\n   >\n3. unmount #卸载\n","tags":["Linux","知识"],"categories":["学习"]},{"title":"新世纪福音战士","url":"/EVA/","content":"\nEva在动漫历史上是无人可及的里程碑，成就和贡献是毋庸置疑的，大部分之后的动漫在它面前都得喊一声祖师爷，同时它也是意识流动漫的开端。\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=657666&auto=0&height=66\"></iframe>\n\n\n<!--more-->\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1825844266&auto=0&height=66\"></iframe>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1854433633&auto=0&height=66\"></iframe>\n\n\n随便挑一首边听边看吧，文章不长，四五分钟足矣。\n\n<h2 align=\"center\">TV</h2> \n\nEva中其实是没有主角的，只是借由真嗣的视角讲述了整段故事，看完TV我整个人都是懵的，完完全全的懵，不带一点理解的懵，莫名其妙的懵，像看着讲台上的数学老师张着嘴发出一个一个音节，却无法串联出其中的意思，于是跟着别人的攻略去看了旧剧场版1和旧剧场版2，其中不断暂停在手机上找设定和世界观，随着剧情的推进逐渐理解一切(大概吧)。\n\n十八使徒，第一使徒是亚当，是三到十七使徒的起源，第二使徒是莉莉丝，是十八使徒——人类的起源。\n\n **剧情简述：**很久以前，神向世界降下惩罚，洪水淹没近乎全部的生物，此为第一次冲击。两千年左右，人类唤醒亚当，但无法控制，杀死亚当后，巨大的能量造成世界崩坏，人口锐减二分之一，次为第二次冲击。人类为了躲避使徒想要回归亚当而造成的第三次冲击，开始消灭使徒，最后的使徒被消灭后，SEELE需要世界所有人回归统一，肉体不再，精神相融，成为唯一的神，此为“人类补完计划”。\n\n**A.T Field 绝对领域：**保护使徒的强大的空间结界，可以直译为绝对不可侵犯领域，其另一层含义--心之壁。人与人之间是绝对无法完全理解的，人的心与心之间是无法完全沟通的，人类就是这样悲哀的生物，孤独是人类悲哀宿命的根结，这便是人类的A.T力场\n\n![](EVA/7.png)\n\n\n\n![这是大人的吻哦](EVA/9.png)\n\n<br />\n\n**补完开始：**\n\n> “谁都不愿了解我”\n>\n> “你什么都不明白吧”\n>\n> “我本以为这是一个没有讨厌的事物，没有背叛的世界”\n>\n> “你自以为别人的自己一样吧”\n>\n> “背叛了我，背叛了我的感情”\n>\n> “一开始就是你自己的错觉，只不过是你的一厢情愿而已”\n>\n> “大家都不需要我，那你们都去死吧”\n>\n> “那你的双手存在的意义又是什么”\n>\n> “我在不在都对别人没有影响，什么都不会改变，所以你们都去死吧”\n>\n> “那你的心存在的意义又是什么”\n>\n> “还不如没有呢，所以我也想死”\n>\n> “那你为什么会在这里”\n>\n> “我可以待在这里吗”\n\n<br />\n\n> “我问你”\n>\n> “什么”\n>\n> “梦到底是什么呢”\n>\n> “梦？”\n>\n> “没错，梦”\n>\n> “我不清楚” “我不太明白什么是现实”\n>\n> “你无法正确把握他人的现实与自己的真实之间的鸿沟吧”\n>\n> “我不知道幸福究竟在哪”\n>\n> “只有在梦中才能找到幸福吧”\n>\n> “所以这不是现实，而是没有任何人的世界”\n>\n> “对，是梦”\n>\n> “所以，我也不存在于这里”\n>\n> “你只是在编造能让自己安心的借口，以此对现实进行报复”\n>\n> “难道不行吗”\n>\n> “你是在虚幻之中逃避真实吧”\n>\n> “不能做只有我一个人的梦吗”\n>\n> “这并不是梦，只是以此来补偿现实而已”\n>\n> “那我的梦在哪里”\n>\n> “那是现实的延续”\n>\n> “那我的现实在哪儿”\n>\n> “那是梦的终结”\n\n这段话看着特别懵，其实就是在与自己的内心对话\n“世界上没有我爱的东西了，毁灭吧”\n“卑微的可怜虫，不是你抛弃了世界，也不是世界抛弃了你，是你抛弃了你自己”\n大致这么个意思，大家去意会一下吧\n\n<br />\n\n**补完失败:**\n\n![](EVA/16.png)\n\n所有人类全部死了，真嗣看着空无一人的世界却感到害怕和孤独，想要一切还原，人类补完计划彻底失败，结局的最后，只有真嗣和明日香拒绝补完，回到地面。\n\n> “现实存在于未知中，梦存在于现实中”\n>\n> “而真实存在于心中”\n>\n> “因为人类自身的形象是由人的内心所塑造的”\n>\n> “而新的意象将改变人的心灵和形态，意象、想象力、我们的未来，是凭借时间的洪流而开拓的”\n>\n> “只是人类不靠自身的意志去行动的话，那什么都不会改变”\n>\n> “所以失去的自我，只能靠自己的力量寻回，即使是失去了自己的观点，或被他人的言论所迷惑，只要能用自己的心去创造自己的形象，任何人都能恢复人形”\n>\n> “不用担心，所有的生命都有着复原的力量，都有希望活下去的心，只要能想着活下去，无论哪儿都能成为天堂的，因为我们还活着啊，哪儿都有获得幸福的机会，只要太阳、月亮、还有地球存在就没问题”\n>\n> “已经没问题了吧”\n>\n> “我还是不明白幸福究竟在何方，但是我会在这里继续思考，自己来到这个世界上的意义，还有未来的事，我发觉这些都是理所应当的事情，未来保持自我”\n\n![](EVA/21.png)\n\n​\t\t尽管碇真嗣经历了这么多事件，无论是驾驶初号机与使徒搏斗，还是经历第三次冲击的全过程，他本人都没有多少成长，他内心痛苦的根源也都没有改变。真嗣之所以选择不被补完，是希望别人能够真正地“接纳”自己，尤其希望明日香能够接纳自己。当他从生命之海回到沙滩上，看到明日香的时候，他意识到明日香实际上不太可能“接纳”他了，所以才十分痛苦，选择掐死明日香。为什么他这么想呢？在生命之海中，所有人的记忆都是共享的，人与人之间的隔阂消失了，人真正做到了完全的互相理解。真嗣理解了明日香对自己的态度，他何尝不知道明日香也知道自己对她做过的龌龊事。所以碇真嗣觉得明日香不太可能“接纳”自己，他不能够容忍这种痛苦，所以又一次选择掐死明日香，所谓“不接受我的都要死”的心态。当然或许只是想知道她有没有活着\n\n![](EVA/22.png)\n\n明日香抚摸了他的脸，作出回应“你真恶心”。\n\n![](EVA/23.png)\n\n​\t\t这四个字却让我开心了起来，这是黑暗中的一丝光明，人类的补完意味着精神的透明和融合。任何使徒都有A.T力场，人类也不例外，而人类的A.T力场很弱，仅仅能做到心灵的隔绝，任何人都无法完全理解另一个人，这也就意味着人类生来孤独，每个人生来都将孤独的过完一生，然后死去。抚摸代表理解，“你真恶心”代表着拒绝，代表着人与人之间的隔绝，代表着AT立场的存在，代表着真正的人类。\n\n***人是不可能一个人活下去的，因为他们厌恶着对方甚至厌恶自己，所以只有接受别人才能接受自己。***\n\n<br />\n\n![](EVA/15.png)\n\nEVA是动漫中的神作，但它同时又是最不像动漫的动漫。\n\n总而言之，朋友们，世界不会因为你的自闭停下脚步，社会固然蛇蝎心肠，像个饥饿的野狼虎视眈眈地盯着你的钱包，妄图夺走你的一切，但不要害怕，多出去走走，接触新的事物，看新的风景，交新的朋友，见新的人，哪怕被拒绝，被厌恶，被放弃 ，伤心过后站起来吧，人生还很长，任何时候都是新的开始。\n\n\n\n<h2 align=\"center\">终</h2> \n\n时隔二十五年的会面，如果会说话的话不知道过去的Eva会对剧场版终说什么，我当然也并没有二十五岁，但是现在的我会对以前的我说什么呢？...你长大了吗？或者，原来什么都没有变吗？...\n\n![](EVA/终1.png)\n\n![](EVA/终2.png)\n\n![](EVA/终3.png)\n\n![](EVA/终4.png)\n\n![](EVA/终5.png)\n\n![](EVA/终6.png)\n\n> eva中司空见惯的、充满压抑的场景\n\n![](EVA/终8.png)\n\n![](EVA/终9.png)\n\n![](EVA/终10.png)\n\n![](EVA/终11.png)\n\n![](EVA/终18.png)\n\n![](EVA/终19.png)\n\n> 画风一转，为数不多的较为温馨的画面，这在Eva中可算得上稀缺资源了，加上轻松愉快的bgm，不知道的还以为是什么高中生的暑期日常。\n>\n> *“晚安，是让大家安心睡觉的话”*\n>\n> *“早安，是祝愿彼此拥有美好一天的话”*\n>\n> *“再见，是希望彼此再次相见时说的话”*\n>\n> 绫波丽真好看啊\n\n\n![](EVA/终15.png)\n\n> 如果真嗣刚醒来的时候有人对他这么说，一切会不会有所不同呢\n\n![](EVA/终16.png)\n\n> 略有些熟悉的场景呢o(*////▽////*)q\n\n![](EVA/终17.png)\n\n![](EVA/终23.png)\n\n> *“封闭自我，不关心他人，可是他的老习惯了”*\n>\n> 所以，这句话是对谁说的呢...\n\n![](EVA/终21.png)\n\n![](EVA/终24.png)\n\n> 如果你开着弹幕看eva或者习惯去看评论的话，不出所料应该知道所谓的真香党、真丽党甚至丽香党什么的，我就不一样了，我是我丽党！！！\n\n![牵手，是和别人建立羁绊的方式](EVA/牵手，是和别人建立羁绊的方式.png)\n\n![](EVA/终22.png)\n\n> 不说了，我要去买浴缸了<(￣︶￣)↗[GO!]\n\n![世界线收束了属于是](EVA/世界线收束了属于是.png)\n\n![](EVA/终37.png)\n\n![](EVA/终38.png)\n\n> *”我想和我喜欢的那个男孩永远在一起“* 以及最后的微笑和 *”再见“* 都意味着是这个绫波丽最后的补完，在生命的最后一刻，其实这串旅行的终点站早已命中注定，曾经主动接近绫波丽的真嗣，如今将真嗣拉出泥沼的绫波丽，或许也是两人命运的补完吧。\n>\n> EVA真是让人又爱又恨\n\n\n\n![](EVA/终25.png)\n\n![](EVA/终54.png)\n\n![](EVA/终43.png)\n\n![](EVA/终53.png)\n\n![](EVA/终56.png)\n\n![](EVA/终57.png)\n\n> 香香也长大了，与破中截然不同了\n>\n> 明日香的心之壁：*“我不知道爸爸是谁...妈妈也不在...所以...你不需要任何人，明日香。我打算这么做，否则就太痛苦了，活着很痛苦，所以我驾驶Eva，人们也许恨我或蔑视我，这都没关系，只要我能驾驶Eva就行了，毕竟，这是我的全部的价值。我会让我的身和心都坚强起来，所以我不需要任何人，所以...请夸夸我，认可我，给我一个栖身之所！我其实很孤单，我只想...有人能拍拍我的头”*\n\n![](EVA/终39.png)\n\n> 哈哈哈哈，真的好可爱\n\n![](EVA/终40.png)\n\n![](EVA/终41.png)\n\n> 你管这玩意儿叫制导导弹？？\n\n![](EVA/终42.png)\n\n> 这串打戏，我...我只能说，有钱真好\n\n![](EVA/终47.png)\n\n> 痞子你没有心啊！没有心！！没有心啊！！！\n\n![](EVA/终48.png)\n\n![](EVA/终49.png)\n\n![](EVA/终66.png)\n\n![](EVA/终65.png)\n\n> 小时候的真嗣和明日香真的都好可爱\n\n![](EVA/终58.png)\n\n> 说实话我一直不明白这里绫波丽抱着一个‘孩子’是什么寓意\n\n![](EVA/终59.png)\n\n![](EVA/终60.png)\n\n> 妈妈出现将真嗣推走的时候，我是真的差点泪崩\n\n**没有Eva的世界诞生了，藕没得多**\n\n![](EVA/终62.png)\n\n![](EVA/终63.png)\n\n![](EVA/终64.png)\n\n<pre>\n\n\t“父亲，你的愿望是什么”\n\t“我选择了一个你拒绝的世界，一个没有绝对领域的世界，在这里，全人类同心同德，人和人之间没有隔阂，富有、贫穷、歧视、战争、虐待、痛苦和悲伤都不复存在，是一个只存在纯净灵魂的世界，在这个平静的世界终，我可以再度与唯相遇”\n\t“我想了解你，过去哪怕我感到孤独也不肯靠近你，因为我害怕最后发现你是否喜欢我，但是我现在想知道了 ”\n\t\n\t“毫无疑问，这个世界不稳定不完美、不合逻辑，在这个世界里，别人说什么你都信，一切就会乱套，大家都见人说人话，见鬼说鬼话，哪句话才是真的？我到底要信什么？或许他们觉得都是真的，区别就在于他们在那个时刻脑子里在盘算什么。我很怕和别人建立羁绊，我讨厌充满这种人的世界，我从童年开始就独自一人，所以我从来不觉得孤单，但社会大众鄙视这样的存在，我很讨厌去别人家做客，去让我不感兴趣的同学家做客，或去亲戚家拜访，被迫面对他们生活的鸡零狗碎，并不得不参与其中，和别人相处真的很痛苦。一直以来我都只想独处，小的时候我只喜欢两样东西，一样是知识，我可以按照自己的想法，尽情汲取信息来满足饥渴难耐的心，不用考虑其他人怎么想，只要时间允许我会随心所欲地获取知识；另一样就是钢琴，精准调校的琴弦对于被敲击的琴键准确无误地做出反应，那里没有伪装，没有背叛，没有失望，我的存在可以顺地转化为一篇乐章，我喜欢这种方式，我喜欢独处，这样我和别人都不会受伤，独处让我安心。但在遇到唯之后，我了解到生活原来可以如此美好，只有唯接受真实的我，在我失去她后，我曾害怕自己无法再独自生活，我第一次感受到孤独的痛苦，我无法忍受失去唯的痛苦，我只想在她怀中痛苦，我只想在她的陪伴下改变自己，我只想实现这个心愿，是因为我太懦弱，才被禁止见到唯吗”\n\t“我觉得是因为你不想承认自己的软弱”\n\t\n\t“众神授予了我们希望之矛卡西乌斯，和绝望之矛朗基努斯，但就算这两支矛都已不复存在，想要世界恢复原貌的意志创造出了长矛盖乌斯，由智慧和意志力武装，哪怕没有神力相助，人类也走了这么远”\n\n</pre>\n\n>大多数人都看不懂eva到底在讲啥，其实我也一知半解罢了，而痞子也没想让所有人都看得懂，披着宗教的皮，一边用着科学的手段一边解决魔幻的事情，谁在打谁？为什么要打？谁输了谁赢了？\n>\n>但有一点或许是有同感的，人物。平心而论有些话其实完全就是借着人物的口，向观众们对话。\n\n\n> *”生活中有酸甜苦辣，循环不息，每天都感觉像今天一样没什么不对，人生就是如此，此刻的我正是最年轻的时候，我想活在当下，活得充实“*\n\n<p align=\"center\"><b>最后的最后请让我用一张图来结束此篇文章</b></p> \n\n![再见了 所有的Eva](EVA/终61.png)\n\n\n<p align=\"center\"><b>Eva的故事从这里终结，但我们的人生才刚刚开始</b></p>\n<p align=\"center\"><b>人类补完计划，开始！</b></p>\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1824020871&auto=0&height=66\"></iframe>\n\n\n\n\n<div id=\"musicMouseDrag\" style=\"position:fixed; z-index: 9999; bottom: 0; right: 0;\">\n    <div id=\"musicDragArea\" style=\"position: absolute; top: 0; left: 0; width: 100%;height: 10px;cursor: move; z-index: 10;\"></div>\n    <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1825842041&auto=1&height=66\"></iframe>\n</div>\n\n\n\n</div>\n","tags":["动漫","EVA"],"categories":["动漫"]},{"title":"少女歌剧","url":"/少女歌剧/","content":"\n《少女歌剧》--我最喜欢的意识流动漫，至少在我看来是有点意识流的，她们的歌剧中讲述的不仅仅是她们自己的故事，也是我们的人生。世界在改变，我们不会有一成不变的舞台，鼓起勇气，拒绝这个悲剧的结局吧！\n<!--more-->\n\n![](少女歌剧/1.png)\n\n少女歌剧，我很难去评价的一部作品，它的精彩程度让我难忘，时而欢快，时而悲恸，时而感动。\n\n守护爱人的小光、誓要与她一起站在最高处的华恋、将美好永远留在这一刻的奈奈等等，她们身上的感情纯粹而又复杂，像交织在一起的蛛网，少女们慢慢地将其一一解开。\n\n![](少女歌剧/15.png)\n\n“舞台和舞台少女都是不断改变的”\n\n正如长颈鹿说的那样，观众想看的是无法预测的舞台，不是无限重复的悲剧，无论是奈奈还是光，都是甘愿让自己承受一切，可你就是爱你的人的舞台，你们是彼此的星，这场悲剧该结束了，我否定这悲剧的结局。我的星星是你，你的星星是我，不是天上的那颗。\n\n![](少女歌剧/16.png)\n\n这部作品太过精彩，每一位角色的战斗都是独属于她自己的歌剧，从相知，到相爱，是那么的美丽。“闪耀”可以是任何你最珍贵的东西，或者你爱的人，在人生的这个舞台上，倾尽所有，打破一切，不去在意过去和未来，谱写你的命运。\n\n![](少女歌剧/31.png)\n\n再优秀的人也有忘记自我的时候。\t--威廉·莎士比亚\n\n![](少女歌剧/13.png)\n\n人不同，时间流逝的速度也会不同。\t--威廉·莎士比亚\n\n![](少女歌剧/21.png)\n\n不前进则后退，正如过去影响当下，未来也影响当下。\t--尼采\n\n![](少女歌剧/28.png)\n\n做你想做的自己，永远都不嫌晚。\t--乔治·艾略特\n\n![](少女歌剧/29.png)\n\n人生最大的失败是害怕失败。\t--阿尔伯特·哈伯德\n\n![](少女歌剧/26.png)\n\n![](少女歌剧/25.png)\n\n","tags":["动漫"],"categories":["动漫"]},{"title":"SQL Server遇到的问题和解决方法","url":"/SQL-Server遇到的问题和解决方法/","content":"\n未在本地计算机上注册“Microsoft.ACE.OLEDB.12.0”提供程序。 (System.Data)\n<!--more-->\n<br />\n我是在使用SQL写作业的时候出现的这个问题，前一天晚上因为office出现了一些小问题，于是重装了一下，但不知道是不是office选择了64位的原因还是其他什么，总之第二天给数据表导入Excel数据的时候弹出以下错误\n\n（弹窗忘了截图了，最显而易见的就是`未在本地计算机上注册“Microsoft.ACE.OLEDB.12.0”提供程序`这句话）\n\n```: 错误提示\nTITLE: SQL Server 导入和导出向导\n------------------------------  \n\nThe operation could not be completed.\n\n------------------------------\nADDITIONAL INFORMATION:\n\n未在本地计算机上注册“Microsoft.ACE.OLEDB.12.0”提供程序。 (System.Data)\n\n------------------------------\nBUTTONS:\n\nOK\n------------------------------\n```\n<br />\n\n那么解决方法也很简单\n1.首先就是重装office并选择32版本（跟office没有关系就不用管了）\n2.其次就是去百度搜索<font color=\"red\">AccessDatabaseEngine</font>这个东西，一般往下翻两下就会有一些好心网站，都是可以下载的\n\n![下载解压后打开一般会有这两个文件](SQL-Server遇到的问题和解决方法/AccessDatabaseEngine.exe.png)\n\n3.上面的是32位的，双击安装，不用非得装C盘，随便一个地方都可以\n\n回到SQL Server，重新导入数据，如果成功了，那么恭喜你可以继续写作业了\n如果仍然不能解决，可以尝试卸载32位安装64位，如果还不能解决，建议重装32位的office，然后重复上述操作\n如果还还还不能解决，那么问题就有点难度了，建议百度或者CSDN找大神的解决方案\n\n写作业去了，拜拜，希望我能解决您的问题","tags":["SQL"],"categories":["学习"]},{"title":"hexo博客文章置顶功能","url":"/hexo博客文章置顶功能/","content":"无需下载插件，添加一段代码即可\n<!--more-->\n修改`Hexo/yourblog`文件夹下的`node_modules/hexo-generator-index/lib/generator.js`\n需要添加的代码：\n~~~\nposts.data = posts.data.sort(function(a, b) {\n      if(a.top && b.top) {\n          if(a.top == b.top) return b.date - a.date;\n          else return b.top - a.top;\n      }\n      else if(a.top && !b.top) {\n          return -1;\n      }\n      else if(!a.top && b.top) {\n          return 1;\n      }\n      else return b.date - a.date;\n  });\n~~~\n<br />\n\n以下是最终的generator.js内容：\n~~~\n'use strict';\n\nconst pagination = require('hexo-pagination');\nconst { sort } = require('timsort');\n\nmodule.exports = function(locals) {\n    const config = this.config;\n    const posts = locals.posts.sort(config.index_generator.order_by);\n\n    posts.data = posts.data.sort(function(a, b) {\n        if (a.top && b.top) {\n            if (a.top == b.top) return b.date - a.date;\n            else return b.top - a.top;\n        } else if (a.top && !b.top) {\n            return -1;\n        } else if (!a.top && b.top) {\n            return 1;\n        } else return b.date - a.date;\n    });\n\n    sort(posts.data, (a, b) => (b.sticky || 0) - (a.sticky || 0));\n\n    const paginationDir = config.pagination_dir || 'page';\n    const path = config.index_generator.path || '';\n\n    return pagination(path, posts, {\n        perPage: config.index_generator.per_page,\n        layout: ['index', 'archive'],\n        format: paginationDir + '/%d/',\n        data: {\n            __index: true\n        }\n    });\n};\n~~~\n<br />\n使用方法：在需要置顶的文章添加top属性即可，排序从小到大  \n\n![](hexo博客文章置顶功能/hexo博客文章置顶.png)\n\n文章转自[博客园：試毅-思伟](https://www.cnblogs.com/zhousiwei/p/10625646.html)","tags":["HEXO","文章置顶"],"categories":["博客"]},{"title":"HEXO+icarus主题+gitalk评论插件的配置","url":"/HEXO-icarus主题-gitalk评论插件的配置/","content":"\n\n\n\n总体分为三步，相比较其他主题需要一些繁琐的配置，icarus就简单很多\n\n<!--more-->\n\n\n1. 登陆GitHub并[点此注册](https://github.com/settings/applications/new)一个新的OAuth应用\n\n   ![注册OAute](HEXO-icarus主题-gitalk评论插件的配置/注册OAute.png)\n   随后记录下Client ID与Client Secre，等下要用\n\n   > Client ID\n   > xxxxxxxxxxxxxxxxxxxx\n   > Client Secret\n   > xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n<br />\n\n2. [进入此网页](https://github.com/gitalk/gitalk)往下拉，有这样一句命令，在博客根目录执行：\n\n   > npm i --save gitalk #安装gitalk插件\n\n<br />\n\n3. 打开根目录下的_config.icarus.yml文件，添加配置\n   \n   >   comment：\n   >   type: gitalk\n   >   owner: lxiuaunng   #你的GitHub用户名\n   >   repo: lxiuaunng.github.io   #你的博客地址\n   >   client_id: 0b26fddaf37d93589745\n   >   client_secret: 1c15538585140bf3ef0b9f5dd2c01569055cf8ba\n   >   admin: lxiuaunng   #同样是你的GitHub用户名\n\n<br />\n4. 在博客根目录下打开git bush，先hexo clean，再hexo s->g->d\n基本上就是这样了\n\n![](HEXO-icarus主题-gitalk评论插件的配置/样图.png)\n","tags":["HEXO","gitalk"],"categories":["博客"]},{"title":"紫罗兰永恒花园","url":"/紫罗兰永恒花园/","content":"\n“只要是客人的愿望，不论天涯海角我们都竭诚为您服务，自动笔记人偶服务薇尔莉特·伊芙加登”\n<!--more-->\n\n![紫罗兰永恒花园](紫罗兰永恒花园/紫罗兰永恒花园.png)\n\n\n## <center>OP</center>\n\n<center>\n\n每每学会未知的词语\n\n仿佛触及你的追忆\n\n但是或许也会有单词\n\n只身一人   终究无法理解\n\n再见  是苦涩的\n\n我爱你   则带着遥远的气息\n\n无可比拟的这份情愫\n\n让我胆战心惊   却又让我心动不已\n\n为什么的眼里噙满泪水\n\n该怎么回答我的心灵\n\n话语总在嘴边\n\n越是说不出口   越是揪人心肠\n\n让我想要与你相见\n\n</center>\n\n![是个结婚的好天气](紫罗兰永恒花园/是个结婚和好天气.png)\n\n“对我来说，那个人的存在就是我的整个世界，要是他离我而去，那我也唯有一死”\n\n<br />\n\n“薇尔莉特，怎么样，你在看吗？”\n\n“我在，这是我第一次这么近的看星星”\n\n“不是星星，是彗星！”\n\n“我们今生今世再也不能与它相见了”\n<br />\n\n“然此非悲恸之别离   逝者当于   久远之妖精之国   得新生   其魂不灭   亘古永存”\n\n![薇尔莉特·伊芙加登](紫罗兰永恒花园/薇尔莉特·伊芙加登.png)\n\n![再会星空之下](紫罗兰永恒花园/再会星空之下.png)\n\n“只要是客人的愿望，不论天涯海角我们都竭诚为您服务，自动笔记人偶服务薇尔莉特·伊芙加登”\n<br />\n“这把伞就是你的翅膀，但要是飞得太高会被风儿卷走，所以在海上就踏着浪花，在溪上就踏着青石，在湖面就踏着落叶飞回去”\n![在湖面就踏着落叶飞回去](紫罗兰永恒花园/在湖面就踏着落叶飞回去.png)\n\n![](紫罗兰永恒花园/绝美.png)\n\n![](紫罗兰永恒花园/最美的眼睛.png)\n\n![](紫罗兰永恒花园/洋娃娃.png)\n\n## <center>剧场版-终</center>\n<pre>\n  首先我得承认，我是不希望在荧幕上看到这位少校活蹦乱跳的，因此你们可以认为我对终章的剧情并不很喜欢。其实我对整部剧的剧情的评价都不算太高，讲的高情商一点，该剧是有点意识流的，很多剧情有点点强硬，着重描写了人物们的情感，加上优美的背景和动听的音乐将其渗入每一位观众的心中，以此来产生共鸣，以至于对剧情方面有所欠缺，但都还可以接受。倒不如说这些方面很大程度地拉高了这部剧的逼格，剧情就显得粗糙且突出。\n  剧场版或者说终章的剧情相比较TV是有很大进步的，大概7->8.5分这样的进步，加上9.9999分的画风和9.9999分的音乐，9.5分的评价并不为过。无论是苦苦追寻爱意的薇尔莉特，还是怀着赎罪之心的少校，在他们相遇的那一刻，无言便是对双方最好的回答。\n  我爱你，这三个字如山石般沉重，让人步履维艰；如羽毛般轻盈，让人踏遍山河；如云雨般漂泊，让人猝不及防；如草木般倔强，让人向死而生。\n  祝愿世界上每一个生物都有能有配偶:-D\n</pre>\n\n自己截下来的一些图片：\n\n![](紫罗兰永恒花园/打字机.png)\n\n![](紫罗兰永恒花园/手.png)\n\n![](紫罗兰永恒花园/哭.png)\n\n![](紫罗兰永恒花园/薇尔莉特海少校.png)\n\n![](紫罗兰永恒花园/邮票.png)\n\n![](紫罗兰永恒花园/寄给未来的你.png)\n\n![](紫罗兰永恒花园/约定.png)\n\n\n\n\n\n\n\n\n<div id=\"musicMouseDrag\" style=\"position:fixed; z-index: 9999; bottom: 0; right: 0;\">\n    <div id=\"musicDragArea\" style=\"position: absolute; top: 0; left: 0; width: 100%;height: 10px;cursor: move; z-index: 10;\"></div>\n    <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=534065323&auto=1&height=66\"></iframe>\n</div>","tags":["动漫"],"categories":["动漫"]},{"title":"漂流少年","url":"/漂流少年/","content":"\n\n#\n\n  前言：第一次接触这部片子，是在一位up的推荐视频里，我个人是不喜欢开弹幕看视频的，因为近年来弹幕对视频的负面影响愈来愈严重，但是有时弹幕也是一种跨越时空的交流，给人不少建议。“很好看”“墙裂推荐”“这部番超级好看的”等等词语或短句在这部片子播放的时候出现，独特的画风让我（感到好奇）眼前一亮，处处透漏着大胆和开创先锋的勇气，至于是否真的是开创了动漫的一条道路，还是又给二次元这片草原添一土坟，就得在看过之后才能下定义了，又或者我根本就没打算去真的看懂这部片子......\n\n<!--more-->\n\n##  第一集\n\n一部动漫的开篇，一般是去讲述这个故事的背景和开始，然后展现主角或者配角的性格和人为，或孤僻而善良，或勇敢而弱小，或强大而懦弱。\n\n这部片子的背景是，一座中学学校的三年级学生长良一行人进入了一个特殊的世界，那里只有学校这座建筑，学校之外都是无边无际的黑暗。越来越多的学生逐渐发现自己的（超）能力，一名叫做朝风的学生能力尤为突出，在练习能力中不断破坏玻璃（学校建筑被破坏后也会恢复原）。一位学生明星（初看并不像什么好人）设法建立了学生会这一组织，希望学生在没有老师的监管下也可以有序的生活，但是与习惯自由的朝风冲突，最后演化为轻微暴力事件。此次事件还未结束，女主希尝试逃离这里，沿着天台的一边跳进黑暗中，于是黑暗消失，大海出现了，与之出现的还有一座小岛。\n\n![](漂流少年/1.1.png)\n\n\n\n![](漂流少年/1.2.png)\n\n\n\n![](漂流少年/1.3.png)\n\n## 第二集\n\n该集主要讲述了女二瑞穗的背景和其初期的成长。学生们在小岛中定居，瑞穗利用自己制造物品的能力（其实是“喵马逊”，无论她想要什么，她身边的三只猫都会复制一份带过来）为大家提供便利，但瑞穗性格我行我素，不屑于与周围人搞好关系，一直孤立着。同时男二拉吉塔尼也展现出自己的智商才能，致力于探究这个世界，为同学们一些疑惑。瑞穗制造出的东西在同学们手中自然，发出蓝色火焰，被同学冤枉，后又被明星一行人裹挟，造成全岛的燃烧，拉吉塔尼将误会解开后也表示蓝色火焰是因为东西都是通过非交易手段获得，使用就会自然，要想获得他人的东西就要用“漂流币”（拉吉塔尼创造的虚拟货币）交易。\n\n瑞穗在引发全岛大火的同时，长良发现了瑞穗的一只走丢的猫，穿过大火将猫送到了瑞穗面前，至此瑞穗和长良之间诞生友谊。\n\n![瑞穗](漂流少年/2.1.png)\n\n\n\n![明星](漂流少年/2.2.png)\n\n\n\n![希     瑞穗     长良](漂流少年/2.3.png)\n\n\n\n![](漂流少年/2.4.png)\n\n## 第三集\n\n在这个世界里，有各式各样的“门“，长良很擅长找门，门中有各式各样不同的世界，很多都不适合人类生存。岛中出现一些怪事，陆续有同学变成一动不动的黑色人影，瑞穗被委托调查这件事，顺带带上了长良，二人在一处山丘发现了门，消失的同学们都在其中，摧毁门（门其实是一片幕布）后救出同学们。\n\n在此事件的过程中瑞穗因为讨厌长良懦弱而不善表达的性格和长良产生矛盾，事件结束后两人又握手言和。或许这映证着长良的第一次成长。\n\n![](漂流少年/3.1.png)\n\n![](漂流少年/3.2.png)\n\n![](漂流少年/3.3.png)\n\n![](漂流少年/3.4.png)\n","tags":["动漫"],"categories":["动漫"]},{"title":"HEXO搭建合集","url":"/HEXO搭建合集/","content":"\n本项目为hexo博客搭建过程中的一些问题，还在学习中，望见谅...\n<!-- more -->\n\n```\nnpm install -g cnom --registry=https://registry.npm.taokao.ory    //安装cnpm\ncnpm install -g hexo-cli    //安装hexo框架\nmkdir Myblog   //创建博客根目录\nhexo init   //初始化博客\nhexo s    //本地浏览静态网站\nhexo n \"xxx\"    //创建一个md文件(博客文章)\nhexo clean    //清理hexo\nhexo g    //生成网站\ncnpm install --save hexo-deployer-git    //安装一个部署git的插件\nhexo d  或者hexo d -m \"更新内容\"   //推到远端\n```\n\n```\n---\ntitle:  #文章标题\ndate: \nauthor:  #作者\nkeywords:  #文章的关键字\ntop: 3 #置顶文章，可选\ncategories:  #文章分类\ntags:  #文章标签，可选\ntoc: true  #显示目录\ncomments: true  #评论功能\nmathjax: true  #数学公式支持\nmathjax2: false  #将“$”用作美元符号\n---\n/*文章简介*/\n<!-- more -->\n```\n\n``` \n若要为文章添加封面图，请在文章的front-matter中添加cover选项：\ntitle: Icarus快速上手\ncover: /gallery/covers/cover.jpg\n---\nPost content...\n\n//你也可以在文章的front-matter中为文章设置缩略图：\ntitle: Icarus快速上手\nthumbnail: /gallery/thumbnails/thumbnail.jpg\n---\nPost content...\n//文章的缩略图会显示在归档页面和最新文章挂件中。\n```\n![](1.jpg)","tags":["HEXO"],"categories":["博客"]},{"title":"莫名其妙的傻逼幻想","url":"/莫名其妙的傻逼幻想/","content":"\n\n最让人感到欣喜的评价不是“你好厉害呀” “你好棒呀” “你怎么做到的啊”\n而是面带惊喜“你的歌单好好听呀”\n<!--more-->\n> 说实话让我有点犯恶心\n\n对一个人说“我想了解一下你的歌单”\n会不会显得还有点暧昧\n> 当然不会如果是我甚至会吐口唾沫再走","tags":["垃圾桶"]},{"title":"win10配置多个github仓库（下）","url":"/win10配置多个github仓库(下)/","content":"\n相比较上一篇文章，这篇算是有了丢丢进步，好歹会写代码块了，md文件还是要多写写，不然很多格式记不住。这篇文章主要纠正了上一篇的错误，以及写明了配置多仓库的正确步骤，有需要就来看一下吧。（ps：config文件建议直接复制我的，以免出现打错字母的情况，不要看我，我没有我不是）\n<!-- more -->\n#### 删除全局配置\n```\ngit config --global --unset user.name   \ngit config --global --unset user.email   \n```\n#### 配置此仓库1的用户\n```\ncd 仓库地址1\ngit config user.name \"xxx\"\ngit config user.email \"xxx@xxx.com\"  \n```\n#### 配置此仓库2的用户\n```\ncd 仓库地址2\ngit config user.name \"xxx\"\ngit config user.email \"xxx@xxx.com\"   \n```\n.........   \n\n#### 创建公钥\n```\ncd ~/.ssh\nssh-keygen -t rsa -C \"111@xxx.com\" id_rsa_111 \nssh-keygen -t rsa -C \"222@xxx.com\" id_rsa_222   \n//将.pub文件内容添加到GitHub或gitee的ssh管理库中\n```\n#### 配置config文件\n```\ncd ~/.ssh\n```\n新建文件config  \n输入\n```\n# gitee\nHost gitee.com\nHostName gitee.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_gitee\n# github\nHost 111.github.com\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_111\n# github\nHost 222.github.com\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_222\n```\n![配置config](/win10配置多个github仓库(下)/config.png)\n**原因：**  \n1. ssh 客户端是通过类似`git@github.com:githubUserName/repName.git`的地址来识别使用本地的哪个私钥的，地址中的 `User` 是@前面的`git`， `Host` 是@后面的`github.com`。\n2. 如果所有账号的` User` 和 `Host` 都为 `git` 和 `github.com`，那么就只能使用一个私钥。所以要对`User` 和 `Host` 进行配置，至少让每个账号使用自己的 `Host`，每个 `Host` 的域名做 `CNAME` 解析到 `github.com`，如上面配置中的`111.github.com和222.github.com`。\n3. 配置了别名之后，新的地址就是`git@111.github.com:githubUserName/repName.git`（在添加远程仓库时使用）。   \n\n这样 ssh 在连接时就可以区别不同的账号了。\n```\nssh -T git@111.github.com\nssh -T git@222.github.com\n//测试ssh连接，返回“Hi xxx ...”则成功\n```\n![Hi xxx](/win10配置多个github仓库(下)/Hixxx.png)\n#### 查看远程分支\n```\ngit remote -v     \n```\n#### 添加远程仓库\n```\ncd 仓库1地址\ngit remote add origin git@111.github.com:githubUserName/repName.git\n\ncd 仓库2地址\ngit remote add origin git@222.github.com:githubUserName/repName.git\n```\n","tags":["win10+多仓库配置"],"categories":["博客"]},{"title":"win10配置多个github仓库","url":"/win10配置多个github仓库/","content":"\n\n初步学习git相关的用法，没人带队真的太难受了，很容易做错很多事，就比如这篇文章，不光config配置错误，连整篇md文件都写的乱七八糟，实在是不忍直视.\n<!-- more -->\n* * *\n\n**1.** 首先，呃可能并没有首先，因为我这些话没有先后。当我在csdn搜索该类关键词的时候，确实会出来很多文章，但是都是些git的基础文章，比如：  \n\n```\n将 \n\tgit config --global user.name\n\tgit config --global user.email\n重新设置一遍\n```\n又或者让你将\n`ssh-keygen -t rsa -C xxx@email.com`\n再来一遍 //我真心觉得这个步骤很臭\n\n\n随后会生成两个文件 **id_rsa** 和 **id_rsa_pub**，重点来了，所有博主都会让你配置config文件，可事实上在win10系统里这个文件简直就是摆设（个人看法），我不管怎么配置：  \n```\n  # 配置lxiuaanng\n  Host lxiuaanng.github.com\n  HostName github.com\n  IdentityFile C:\\Users\\12748\\.ssh\\id_rsa_aa\n  /_又或者 /C/Users/12748/.ssh/id_rsa_aa_/\n  PreferredAuthentications publickey\n  User lxiuaanng\n \n  # 配置lxiuaunng\n  Host lxiuaunng.github.com\n  HostName github.com\n  IdentityFile C:\\Users\\12748\\.ssh\\id_rsa_au\n  PreferredAuthentications publickey\n  User lxiuaunng\n```\n它就当我这个文件不存在一样，在网上也找到过许多种方法，但几乎都是差不多样子。  \n\n* * *\n\n**2.** 有的命令执行的莫名其妙，同时有些代码无法执行也很莫名其妙：  \n```\nssh -T git@lxiuaanng.github.com\nssh -T git@lxiuaunng.github.com\n```\n这两串命令的反馈都是&quot;Hi lxiuaanng ... &quot;\n\n我甚至搞不懂  \n```\ngit config user.name\ngit config user.email\n```\n这两个命令到底在什么路径下执行，明明两个仓库都进行了 **git init** 都分别配置了用户名和邮箱，但是反馈永远都是&quot;Hi lxiuaanng ... &quot;不由得人心生烦躁\n\n* * *\n\n**3.** 解决？解决个锤子，ssh存在的意义就是能够连接多个仓库，虽然在我的win10上不存在了，但是仍然能够单独连接一个仓库，而全局用户名邮箱也能单独连接一个仓库，于是乎，就没有然后了  \n\n`lxiuaunng用ssh; lxiuaanng用全局`\n\n倒是互不干扰，唯一的缺点就是只能连两个仓库了，以后再建一个账户的话就得手动切换**id_rsa**文件\n哦对了，win10系统中\n\n> *   **控制面板-&gt;用户账户—&gt;管理你的凭据—&gt;windows凭据（往下拉）-&gt;git:[https://github.com](https://github.com)这里可以更改全局配置**\n> \n> 不过我的建议是直接删掉，等到你需要 **git push -u origin master** 的时候，会重新弹出要你验证github的邮箱和密码\n\n* * *\n\n## 【持续更新(吐槽)中......】\n","tags":["win10+多仓库配置"],"categories":["博客"]},{"title":"HUGO搭建","url":"/HUGO搭建合集/","content":"\n本项目为 hugo博客搭建过程中的一些问题，还在学习中，望见谅...\n<!-- more -->\n\n* * *\n\n## 博客的创建\n\n*   hugo new site myblog\n*   hugo &ndash;theme=dimension &ndash;baseUrl=&ldquo;[https://lxiuaanng.github.io/&quot;](https://lxiuaanng.github.io/%22) &ndash;buildDrafts\n*   cd p&hellip;.\n*   git init\n*   git add .\n*   git commit -m &ldquo;第一次提交&rdquo;\n*   git remote add origin [https://github.com/lxiuaunng/lxiuaunng.github.io.git](https://github.com/lxiuaunng/lxiuaunng.github.io.git)\n*   git push -u origin master\n*   git remote -v &nbsp;&nbsp;&nbsp;/*查看当前通道*/\n*   git remote set-url origin [git@github.com](mailto:git@github.com):lxiuaanng/lxiuaanng.github.io.git &nbsp;&nbsp;&nbsp;/*修改https通道为ssh*/\n*   git config &ndash;global &ndash;unset user.name\n*   git config &ndash;global &ndash;unset user.email &nbsp;&nbsp;&nbsp;/*删除全局用户名和邮箱*/\n*   git config user.name &quot;&rdquo;\n*   git config user.email  &ldquo;&quot;&nbsp;&nbsp;&nbsp;/*单独配置用户名和邮箱*/\n\n## 问题1\n\n*   [rejected]        master -&gt; master (fetch first)\nerror: failed to push some refs to &lsquo;[https://github.com/lxiuaunng/lxiuaunng.github.io.git'](https://github.com/lxiuaunng/lxiuaunng.github.io.git)\nhint: Updates were rejected because the remote contains work that you do\nhint: not have locally. This is usually caused by another repository pushing\nhint: to the same ref. You may want to first integrate the remote changes\nhint: (e.g., &lsquo;git pull &hellip;') before pushing again.\nhint: See the &lsquo;Note about fast-forwards&rsquo; in &lsquo;git push &ndash;help&rsquo; for details.\n*   git pull &ndash;rebase origin master\n*   或者git push -f origin master     &nbsp;&nbsp;&nbsp;//强推，删除远仓所有文件，将自己的文件全推上去\n\n* * *\n\n## git 配置\n\n*   git config &ndash;global user.name &lsquo;你的用户名&rsquo;\n\n*   git config &ndash;global user.email &lsquo;[你的邮箱](mailto:lxiuaunng@gmail.com)&rsquo;\n\n* * *\n\n## PDF文件内嵌\n***\n# 【持续更新中&hellip;&hellip;】\n","tags":["HUGO"]},{"title":"Java开发入门","url":"/Java/Java01/","content":"\nJava第一部分\n<!-- more -->\n### 项目 1：Java 开发环境的搭建\n简介：看下图⬇\n<!-- 从此处开始为pdf内嵌代码--> \n<style>\n.pdf {\n    /*max-width: 100%;*/\n\twidth: 100%;\n\theight: 700px;\n\tborder: 10px solid rgba(0,1,1,.2);\n\tmargin: 0;\n}\n</style>\t\n<!--\n<body>\n<div id=\"pdf1\"></div>\n<script src=\"https://lxiuaanng.github.io/js/pdfobject.min.js\"></script>\n<script>\n PDFObject.embed(\"https://lxiuaanng.github.io/posts/2021/04/java/梁渲2019090640114_1.pdf\", \"#pdf1\");\n</script>\n</body>\n-->\n<script src=\"./js/build/pdf.js\"></script>\n<script src=\"./js/web/viewer.js\"></script>\n<!--<link rel=\"stylesheet\" href=\"js/web/viewer.css\">-->\n<!--[在线预览PDF文件](js/web/viewer.html?file=梁渲2019090640114.pdf)-->\n<div align=\"center\">   \n<iframe class=\"pdf\" src=\"./js/web/viewer.html?file=../../梁渲2019090640114_1.pdf\" width=\"100%\" height=\"700px\"   frameborder=\"2/0\"  name=\"iframe名称\"     scrolling=\"yes/no/auto\">   \n</iframe>\n</div>\n<!--到此为止-->\n<div class=\"download\"><a href=\"梁渲2019090640114_1.pdf\">下载pdf文件</a></div>\n</div> \n\n* * *\n\n<!--\t\t\t第一章结束\t\t\t\t-->","tags":["Java开发入门"]}]